---
- name: (_db_install) Enable mariadb
  service:
    name: mysql
    state: started
    enabled: true

- name: (_db_install) Cook mysql password
  set_fact:
    mysql_user_password: >-
      {{
        (azuracast_app_env == 'production')
        | ternary(azuracast_mysql_password, dev_mysql_user_password)
      }}

- name: (_db_install) Add configuration
  template:
    src: db_install/my.cnf.j2
    dest: /etc/mysql/conf.d/my.cnf
    owner: root
    group: root
    mode: 0644

- name: (_db_install) Add empty root .my.cnf (if none exists)
  template:
    src: db_install/root_empty_my.cnf.j2
    dest: /root/.my.cnf
    owner: root
    group: root
    mode: 0600
    force: false

- name: (_db_install) MariaDB Cleanup
  command: >-
    mysql --defaults-extra-file=/root/.my.cnf -ne "{{ _current_sql_cleanup_query }}"
  loop:
    - "DELETE FROM mysql.user WHERE User=''"
    - "DELETE FROM mysql.user WHERE User='root' AND Host NOT IN ('localhost', '127.0.0.1', '::1')"
  loop_control:
    loop_var: _current_sql_cleanup_query
  changed_when: false

- name: (_db_install) Set up AzuraCast database user
  mysql_user:
    name: azuracast
    host: "localhost"
    password: "{{ mysql_user_password }}"
    priv: "azuracast.*:ALL,GRANT"
    state: present
    login_unix_socket: "/run/mysqld/mysqld.sock"
  notify: Send mysql notification

- name: (_db_install) Add .my.cnf
  template:
    src: db_install/user_my.cnf.j2
    dest: "{{ app_base }}/.my.cnf"
    owner: azuracast
    group: www-data
    mode: 0644
    force: true

- name: (_db_install) Reload privilege tables
  command: >-
    mysql --defaults-extra-file=/root/.my.cnf -ne "FLUSH PRIVILEGES"
  changed_when: false

# Create Database
- name: (_db_install) Create MySQL Database
  community.mysql.mysql_db:
    config_file: "/root/.my.cnf"
    name: azuracast
    state: present
    collation: utf8mb4_unicode_ci
    encoding: utf8mb4
    login_unix_socket: "/run/mysqld/mysqld.sock"
  register: azuracast_db_created

- name: (_db_install) Set up environment file
  ini_file:
    dest: "{{ www_base }}/env.ini"
    section: "configuration"
    option: "{{ _current_db_install_env_ini.option }}"
    value: "{{ _current_db_install_env_ini.value }}"
    mode: 0644
  loop:
    - option: "MYSQL_HOST"
      value: "localhost"

    - option: "MYSQL_PORT"
      value: "3306"

    - option: "MYSQL_USER"
      value: "azuracast"

    - option: "MYSQL_DB"
      value: "azuracast"

    - option: "MYSQL_PASSWORD"
      value: "{{ mysql_user_password }}"
  no_log: true
  loop_control:
    label: "{{ _current_db_install_env_ini.option }}"
    loop_var: _current_db_install_env_ini
